@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject HttpClient Http

<AuthorizeView>
    <Authorized>
        <a href="authentication/profile">Hello, @context.User.Identity.Name!</a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/register">Register</a>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        OidcContext context;

        await SignOutManager.SetSignOutState();

        context = await Http.GetFromJsonAsync<OidcContext>("OidcContext");

        if (context.IsExternalLogin)
        {
            //await Http.GetAsync("OidcContext/signout");

            // link to local logout page
            string returnUrl = Navigation.BaseUri + "authentication/logout";
            // link to remote logout page (Identity Server)
            string logoutUrl = context.Authority + "Identity/Account/Logout?returnUrl="+Uri.EscapeDataString(returnUrl);

            Navigation.NavigateTo(logoutUrl, true);
        }
        else
            Navigation.NavigateTo("authentication/logout");
    }
}
